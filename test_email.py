#!/usr/bin/env python3
"""
SendGrid Email Test Utility
Test your SendGrid configuration before setting up daily digest automation.

Usage:
    python test_email.py --to your@email.com
    python test_email.py --to your@email.com --from custom@sender.com
"""

import argparse
import os
from datetime import date
from dotenv import load_dotenv
from streamlit_arxiv_digest import send_email

# Load environment variables
load_dotenv()

def create_test_email_content():
    """Create a test email with sample ArXiv content."""
    html_content = f"""
    <div style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto;">
        <h1 style="color: #1a73e8; text-align: center;">📚 ArXiv Digest - Email Test</h1>
        <h2 style="color: #5f6368; text-align: center;">SendGrid Configuration Test for {date.today().strftime('%B %d, %Y')}</h2>
        
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #1a73e8; margin-top: 0;">✅ Configuration Test Successful!</h3>
            <p>If you're reading this email, your SendGrid integration is working correctly.</p>
            
            <h4>Next Steps:</h4>
            <ul>
                <li>✅ SendGrid API connection verified</li>
                <li>✅ Email delivery working</li>
                <li>✅ HTML formatting supported</li>
                <li>🚀 Ready to set up daily ArXiv digest automation!</li>
            </ul>
        </div>
        
        <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #1565c0; margin-top: 0;">📋 Sample ArXiv Paper Format</h3>
            <h4 style="color: #1a73e8;">Large Language Models for Automated Code Generation</h4>
            <p style="color: #5f6368; margin: 5px 0;"><strong>Authors:</strong> Jane Smith (Google), John Doe (OpenAI)</p>
            <p style="color: #5f6368; margin: 5px 0;"><strong>Published:</strong> {date.today().strftime('%Y-%m-%d')}</p>
            
            <div style="margin: 15px 0;">
                <strong>🤖 AI Summary:</strong><br>
                • <strong>Key contribution:</strong> Novel approach to code generation using transformer models<br>
                • <strong>Why it matters:</strong> Potential to improve developer productivity by 40%<br>
                • <strong>Technical approach:</strong> Fine-tuned GPT model on large code repositories
            </div>
            
            <p style="margin-top: 15px;">
                <a href="#" style="color: #1a73e8; text-decoration: none; margin-right: 15px;">📄 PDF</a>
                <a href="#" style="color: #1a73e8; text-decoration: none;">🔗 arXiv</a>
            </p>
        </div>
        
        <hr style="border: 1px solid #e0e0e0; margin: 30px 0;">
        <p style="text-align: center; color: #9aa0a6; font-size: 12px;">
            Test email generated by ArXiv Digest App • Powered by Google Gemini via OpenRouter
        </p>
    </div>
    """
    return html_content

def test_sendgrid_connection():
    """Test SendGrid API connection and configuration."""
    print("🧪 Testing SendGrid Configuration")
    print("=" * 50)
    
    # Check environment variables
    sendgrid_key = os.getenv("SENDGRID_API_KEY")
    from_email = os.getenv("FROM_EMAIL", "digest@artefact.ai")
    
    if not sendgrid_key:
        print("❌ SENDGRID_API_KEY not found in environment")
        print("💡 Make sure to set SENDGRID_API_KEY in your .env file")
        return False
    
    print(f"✅ SENDGRID_API_KEY found (ends with: ...{sendgrid_key[-8:]})")
    print(f"📧 From email: {from_email}")
    
    # Test API key format
    if not sendgrid_key.startswith("SG."):
        print("⚠️ Warning: SendGrid API key should start with 'SG.'")
    
    print("✅ SendGrid configuration looks good!")
    return True

def main():
    parser = argparse.ArgumentParser(description="Test SendGrid email configuration")
    parser.add_argument("--to", required=True, help="Email address to send test email to")
    parser.add_argument("--from", dest="from_email", help="Override from email address")
    parser.add_argument("--subject", default="ArXiv Digest - Email Configuration Test", help="Email subject")
    
    args = parser.parse_args()
    
    # Test configuration
    if not test_sendgrid_connection():
        return 1
    
    # Override from email if provided
    if args.from_email:
        os.environ["FROM_EMAIL"] = args.from_email
        print(f"📧 Using custom from email: {args.from_email}")
    
    print("\n🚀 Sending test email...")
    print(f"📧 To: {args.to}")
    print(f"📝 Subject: {args.subject}")
    
    # Create test content
    html_content = create_test_email_content()
    
    # Send test email
    success = send_email(
        to_email=args.to,
        subject=args.subject,
        html_body=html_content,
        verbose=True
    )
    
    print("\n" + "=" * 50)
    if success:
        print("🎉 Test email sent successfully!")
        print("📬 Check your inbox (and spam folder) for the test email")
        print("✅ Your SendGrid configuration is working correctly")
        print("\n💡 Next steps:")
        print("   1. Verify the email formatting looks good")
        print("   2. Set up your daily digest configuration")
        print("   3. Run: python daily_digest.py --config config.json")
        return 0
    else:
        print("❌ Test email failed to send")
        print("💡 Check the error messages above and verify:")
        print("   1. SENDGRID_API_KEY is correct")
        print("   2. API key has Mail Send permissions")
        print("   3. Sender email is verified in SendGrid")
        print("   4. No billing or quota issues")
        return 1

if __name__ == "__main__":
    exit(main())